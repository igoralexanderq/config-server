server:
  port: ${CUSTOM.SERVER.PORT:9080}

#resilience4j:
#  circuitbreaker:
#    configs:
#      product-service-cb:
#        slidingWindowSize: 12
#        failureRateThreshold: 48
#        waitDurationInOpenState: 10s
#        permittedNumberOfCallsInHalfOpenState: 8
#        slowCallRateThreshold: 58
#        slowCallDurationThreshold: 500ms
#        automaticTransitionFromOpenToHalfOpenEnabled: true
#    instances:
#      mitocode-product:
#        base-config: product-service-cb

# Spring Cloud Gateway Routes
spring:
  cloud:
    gateway:
      routes:
        - id: product-service-route
          uri: lb://PRODUCT-SERVICE #http://service-1.com, http://service-2.com
          predicates:
            - Path=/api/product-service/**
          filters:
            - StripPrefix=2
            - AddRequestParameter=flag,true
            #- name: CircuitBreaker
              #args:
                #name: mitocode-product
                #statusCodes: 400,401,403,500,503
                #fallbackUri: forward:/api/user-service/api/mitocode/user
        - id: user-service-route
          uri: lb://user-service
          predicates:
            - Path=/api/user-service/**
          filters:
            - StripPrefix=2
            #- Name: CustomFilter
            #  args:
            #    headerKey: MitocodeKey
            #    headerValue: MitocodeValue
            - UserServiceFilter=MitocodeKey, MitocodeValue #Eso es así cuando se utiliza el método: name de la clase CustomFilter.